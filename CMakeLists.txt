CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(NCS)

SET(NCS_CUDA FALSE)
IF(NCS_CUDA)
	ADD_DEFINITIONS(-DNCS_CUDA)
ENDIF(NCS_CUDA)

SET(NCS_OCELOT FALSE)
IF(NCS_OCELOT)
  ADD_DEFINITIONS(-DNCS_OCELOT)
ENDIF(NCS_OCELOT)

#ADD_DEFINITIONS(-DDEBUG)
#ADD_DEFINITIONS(-pg)
SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${NCS_SOURCE_DIR}/CMakeModules")
SET(NCS_PLUGIN_PATH "${CMAKE_INSTALL_PREFIX}/ncs/plugins")
#SET(CMAKE_BUILD_TYPE Debug)
SET(CMAKE_BUILD_TYPE Release)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -g")
#SET(CXX11_FLAGS -std=gnu++0x)
SET(CXX11_FLAGS -std=c++11)
SET(NCS_INCLUDES "${NCS_SOURCE_DIR}/base/include")

IF (NCS_CUDA)
  FIND_PACKAGE(CUDA)
  SET(CUDA_OPTIONS -arch sm_21)
  IF (${CUDA_VERSION_MAJOR} LESS 5)
    SET(CUDA_OPTIONS -arch sm_21 -ccbin=/usr/bin/g++-4.4) 
  ENDIF (${CUDA_VERSION_MAJOR} LESS 5)
ENDIF (NCS_CUDA)

IF(UNIX)
	ADD_DEFINITIONS(-DUNIX)
ENDIF(UNIX)

ADD_SUBDIRECTORY(base)
ADD_SUBDIRECTORY(plugins)

CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
				"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
				IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
				  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")

