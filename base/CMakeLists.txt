PROJECT(NCS_BASE)

FIND_PACKAGE(MPI)
SET(ADDITIONAL_LIBS ${MPI_LIBRARIES})
IF(NCS_CUDA)
  FIND_PACKAGE(CUDA)
  IF (CUDA_FOUND)
    ADD_DEFINITIONS(-DNCS_CUDA)
    INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
    SET(ADDITIONAL_LIBS ${ADDITIONAL_LIBS} ${CUDA_LIBRARIES})
  ENDIF (CUDA_FOUND)
ENDIF(NCS_CUDA)


SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CXX11_FLAGS}")

INCLUDE_DIRECTORIES("include" ${MPI_INCLUDE_PATH})

AUX_SOURCE_DIRECTORY("source/spec" specSource)
ADD_LIBRARY(ncs_spec SHARED ${specSource})
SET_TARGET_PROPERTIES(ncs_spec PROPERTIES LINKER_LANGUAGE CXX)

AUX_SOURCE_DIRECTORY("source/sim" simSource)
ADD_LIBRARY(ncs_sim SHARED ${simSource})
SET_TARGET_PROPERTIES(ncs_sim PROPERTIES LINKER_LANGUAGE CXX)
TARGET_LINK_LIBRARIES(ncs_sim ncs_spec)

FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})
FIND_PACKAGE(PythonLibs)
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
SET(CMAKE_SWIG_FLAGS "")
SET_SOURCE_FILES_PROPERTIES("pyncs.i" PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES("pyncs.i" PROPERTIES SWIG_FLAGS "-includeall")
SET(SWIG_MODULE_pyncs_EXTRA_DEPS
    "include/ncs/spec/InputGroup.h"
    "include/ncs/sim/Simulation.h"
    "include/ncs/spec/BoxGenerator.h"
    "include/ncs/spec/ExactGenerator.h"
    "include/ncs/spec/Generator.h"
    "include/ncs/spec/InputGroup.h"
    "include/ncs/spec/ModelSpecification.h"
    "include/ncs/spec/NormalGenerator.h"
    "include/ncs/spec/Report.h"
    "include/ncs/spec/UniformGenerator.h"
)
SWIG_ADD_MODULE(pyncs python "pyncs.i")
SWIG_LINK_LIBRARIES(pyncs ${PYTHON_LIBRARIES} ncs_spec ncs_sim)

INSTALL(DIRECTORY include/ncs
        DESTINATION include
		FILES_MATCHING PATTERN "*.h")

IF(UNIX)
	TARGET_LINK_LIBRARIES(ncs_spec pthread dl)
	TARGET_LINK_LIBRARIES(ncs_sim pthread dl ${ADDITIONAL_LIBS})
	INSTALL(TARGETS ncs_spec ncs_sim LIBRARY DESTINATION lib)
ENDIF(UNIX)
